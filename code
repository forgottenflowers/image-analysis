from ij import IJ
import time

# Input parameters
vol_info_path = "G:/trial_data/055_pv036_tip_2x_3p08_30ms_HA_250mm_45keV_gap6p7mm_Cu0p45_3900prj/055_pv036_tip_2x_3p08_30ms_HA_250mm_45keV_gap6p7mm_Cu0p45_3900prj_0.vol.info"
vol_data_path = vol_info_path.replace("0.vol.info", "0_16b.vol")
out_path = "G:/trial_data/out.tif"

# Read parameters from info file
params = {}
with open(vol_info_path, "r") as f:
    for line in f:
        if "=" in line:
            key, val = line.strip().split("=")
            params[key.strip()] = val.strip()
 
# Image properties
x = int(params["NUM_X"])
y = int(params["NUM_Y"])
z = int(params["NUM_Z"])
endian = "little-endian" if params["BYTEORDER"].upper() == "LOWBYTEFIRST" else "big-endian"
image_type = "[16-bit Unsigned]"  #default

# Build the macro string step by step
macro_string = (
    "open=" + vol_data_path + " " +
    "image=" + image_type + " " +
    "width=" + str(x) + " " +
    "height=" + str(y) + " " +
    "number=" + str(z) + " " +
    endian
)

start_time = time.time()

# Run the raw import exactly like GUI
IJ.run("Raw...", macro_string)

# Get the active image (ImagePlus object)
imp = IJ.getImage()

# Save as TIF
#IJ.saveAs(imp, "Tiff", out_path)
out_path_ome = out_path.replace(".tif", ".ome.tif")
IJ.run(imp, "Bio-Formats Exporter", "save="+out_path_ome)

# Close image to free memory
imp.close()

end_time = time.time()
elapsed = end_time - start_time
print("Image saved successfully.")
print("Time elapsed: {:.2f} seconds".format(elapsed))
